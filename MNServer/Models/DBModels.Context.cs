//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MNServer.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ProcessMastertoRoleMap> ProcessMastertoRoleMaps { get; set; }
        public virtual DbSet<Tbl_Action_Master> Tbl_Action_Master { get; set; }
        public virtual DbSet<Tbl_BirthRegistration> Tbl_BirthRegistration { get; set; }
        public virtual DbSet<Tbl_DeathRegistration> Tbl_DeathRegistration { get; set; }
        public virtual DbSet<Tbl_Login> Tbl_Login { get; set; }
        public virtual DbSet<Tbl_Page_Role> Tbl_Page_Role { get; set; }
        public virtual DbSet<Tbl_Process_Action_Map> Tbl_Process_Action_Map { get; set; }
        public virtual DbSet<Tbl_Process_Master> Tbl_Process_Master { get; set; }
        public virtual DbSet<Tbl_Role_Master> Tbl_Role_Master { get; set; }
        public virtual DbSet<TblRole_Master> TblRole_Master { get; set; }
        public virtual DbSet<TblRoleToActionMap> TblRoleToActionMaps { get; set; }
        public virtual DbSet<TblUsertoRoleMap> TblUsertoRoleMaps { get; set; }
        public virtual DbSet<tbl_audit> tbl_audit { get; set; }
        public virtual DbSet<Tbl_Birth_Process_Action> Tbl_Birth_Process_Action { get; set; }
        public virtual DbSet<Tbl_Clarification_Master> Tbl_Clarification_Master { get; set; }
        public virtual DbSet<tblLogin> tblLogins { get; set; }
        public virtual DbSet<Tbl_Customer_Master> Tbl_Customer_Master { get; set; }
        public virtual DbSet<Tbl_UserMaster> Tbl_UserMaster { get; set; }
        public virtual DbSet<Tbl_DocumentsAttachment> Tbl_DocumentsAttachment { get; set; }
        public virtual DbSet<Tbl_Document_List> Tbl_Document_List { get; set; }
        public virtual DbSet<Tbl_Document_BnD_List> Tbl_Document_BnD_List { get; set; }
        public virtual DbSet<Tbl_Document_Identity_List> Tbl_Document_Identity_List { get; set; }
    
        public virtual int DisplayAllData(Nullable<int> userId, string userName, string password, Nullable<bool> isActive, Nullable<int> query)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var queryParameter = query.HasValue ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DisplayAllData", userIdParameter, userNameParameter, passwordParameter, isActiveParameter, queryParameter);
        }
    
        public virtual ObjectResult<string> InsertAuditData(Nullable<int> userId, string userName, string page_name, string ipAddress, string timestamp, string session_id, Nullable<bool> result_auth)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var page_nameParameter = page_name != null ?
                new ObjectParameter("page_name", page_name) :
                new ObjectParameter("page_name", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            var timestampParameter = timestamp != null ?
                new ObjectParameter("timestamp", timestamp) :
                new ObjectParameter("timestamp", typeof(string));
    
            var session_idParameter = session_id != null ?
                new ObjectParameter("session_id", session_id) :
                new ObjectParameter("session_id", typeof(string));
    
            var result_authParameter = result_auth.HasValue ?
                new ObjectParameter("result_auth", result_auth) :
                new ObjectParameter("result_auth", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertAuditData", userIdParameter, userNameParameter, page_nameParameter, ipAddressParameter, timestampParameter, session_idParameter, result_authParameter);
        }
    
        public virtual int InsertData_SP(Nullable<int> iD, string name, Nullable<int> age, Nullable<bool> gender)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertData_SP", iDParameter, nameParameter, ageParameter, genderParameter);
        }
    
        public virtual ObjectResult<string> Login_SP(Nullable<int> userId, string userName, string password, Nullable<bool> isActive, ObjectParameter msg)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Login_SP", userIdParameter, userNameParameter, passwordParameter, isActiveParameter, msg);
        }
    
        public virtual ObjectResult<string> Registration_SP(string userName, string password, string mailId, Nullable<long> mobileNumber, string created_By, string modified_by, ObjectParameter msg)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mailIdParameter = mailId != null ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(string));
    
            var mobileNumberParameter = mobileNumber.HasValue ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(long));
    
            var created_ByParameter = created_By != null ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("Modified_by", modified_by) :
                new ObjectParameter("Modified_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Registration_SP", userNameParameter, passwordParameter, mailIdParameter, mobileNumberParameter, created_ByParameter, modified_byParameter, msg);
        }
    
        public virtual int SelectData_SP(string salary)
        {
            var salaryParameter = salary != null ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectData_SP", salaryParameter);
        }
    
        public virtual ObjectResult<string> SP_AddRoleMaster(string roleName, string roleDescription, Nullable<bool> isSystemUser, ObjectParameter msg)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("RoleDescription", roleDescription) :
                new ObjectParameter("RoleDescription", typeof(string));
    
            var isSystemUserParameter = isSystemUser.HasValue ?
                new ObjectParameter("IsSystemUser", isSystemUser) :
                new ObjectParameter("IsSystemUser", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_AddRoleMaster", roleNameParameter, roleDescriptionParameter, isSystemUserParameter, msg);
        }
    
        public virtual int SP_AddUserRole(string userId, string roleId, ObjectParameter msg)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddUserRole", userIdParameter, roleIdParameter, msg);
        }
    
        public virtual ObjectResult<SP_BirthProcessAction_Result> SP_BirthProcessAction(Nullable<int> pID, string strproc)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(int));
    
            var strprocParameter = strproc != null ?
                new ObjectParameter("strproc", strproc) :
                new ObjectParameter("strproc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BirthProcessAction_Result>("SP_BirthProcessAction", pIDParameter, strprocParameter);
        }
    
        public virtual ObjectResult<SP_ChkRoleAction_Result> SP_ChkRoleAction(Nullable<int> userId, Nullable<int> processId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var processIdParameter = processId.HasValue ?
                new ObjectParameter("ProcessId", processId) :
                new ObjectParameter("ProcessId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ChkRoleAction_Result>("SP_ChkRoleAction", userIdParameter, processIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ChkUserRole(Nullable<int> u_id, ObjectParameter msg)
        {
            var u_idParameter = u_id.HasValue ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ChkUserRole", u_idParameter, msg);
        }
    
        public virtual int SP_CreateProfile(string iD, string first_Name, string last_Name, Nullable<bool> gender, Nullable<System.DateTime> dOB, string pAN, string drivingLicenseNo, string idProofeNumber, string address, string password, string dist, string state, string country, Nullable<int> land_lineNo, string otherGovID, string cINNo, string gISTNo, Nullable<bool> isActive, string iDProofe, string nationality, string organisationName, string organisationType, string autherizedPerson, string autherizPrsDesig, string autherizPrsEmail_Id, string city, Nullable<int> pincode)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var pANParameter = pAN != null ?
                new ObjectParameter("PAN", pAN) :
                new ObjectParameter("PAN", typeof(string));
    
            var drivingLicenseNoParameter = drivingLicenseNo != null ?
                new ObjectParameter("DrivingLicenseNo", drivingLicenseNo) :
                new ObjectParameter("DrivingLicenseNo", typeof(string));
    
            var idProofeNumberParameter = idProofeNumber != null ?
                new ObjectParameter("IdProofeNumber", idProofeNumber) :
                new ObjectParameter("IdProofeNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var distParameter = dist != null ?
                new ObjectParameter("Dist", dist) :
                new ObjectParameter("Dist", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var land_lineNoParameter = land_lineNo.HasValue ?
                new ObjectParameter("Land_lineNo", land_lineNo) :
                new ObjectParameter("Land_lineNo", typeof(int));
    
            var otherGovIDParameter = otherGovID != null ?
                new ObjectParameter("OtherGovID", otherGovID) :
                new ObjectParameter("OtherGovID", typeof(string));
    
            var cINNoParameter = cINNo != null ?
                new ObjectParameter("CINNo", cINNo) :
                new ObjectParameter("CINNo", typeof(string));
    
            var gISTNoParameter = gISTNo != null ?
                new ObjectParameter("GISTNo", gISTNo) :
                new ObjectParameter("GISTNo", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var iDProofeParameter = iDProofe != null ?
                new ObjectParameter("IDProofe", iDProofe) :
                new ObjectParameter("IDProofe", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var organisationNameParameter = organisationName != null ?
                new ObjectParameter("OrganisationName", organisationName) :
                new ObjectParameter("OrganisationName", typeof(string));
    
            var organisationTypeParameter = organisationType != null ?
                new ObjectParameter("OrganisationType", organisationType) :
                new ObjectParameter("OrganisationType", typeof(string));
    
            var autherizedPersonParameter = autherizedPerson != null ?
                new ObjectParameter("AutherizedPerson", autherizedPerson) :
                new ObjectParameter("AutherizedPerson", typeof(string));
    
            var autherizPrsDesigParameter = autherizPrsDesig != null ?
                new ObjectParameter("AutherizPrsDesig", autherizPrsDesig) :
                new ObjectParameter("AutherizPrsDesig", typeof(string));
    
            var autherizPrsEmail_IdParameter = autherizPrsEmail_Id != null ?
                new ObjectParameter("AutherizPrsEmail_Id", autherizPrsEmail_Id) :
                new ObjectParameter("AutherizPrsEmail_Id", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateProfile", iDParameter, first_NameParameter, last_NameParameter, genderParameter, dOBParameter, pANParameter, drivingLicenseNoParameter, idProofeNumberParameter, addressParameter, passwordParameter, distParameter, stateParameter, countryParameter, land_lineNoParameter, otherGovIDParameter, cINNoParameter, gISTNoParameter, isActiveParameter, iDProofeParameter, nationalityParameter, organisationNameParameter, organisationTypeParameter, autherizedPersonParameter, autherizPrsDesigParameter, autherizPrsEmail_IdParameter, cityParameter, pincodeParameter);
        }
    
        public virtual int SP_DisplayAllDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DisplayAllDetails");
        }
    
        public virtual int SP_Displayallusers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Displayallusers");
        }
    
        public virtual ObjectResult<SP_DisplayRole_Result> SP_DisplayRole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DisplayRole_Result>("SP_DisplayRole");
        }
    
        public virtual int SP_DisplindiviualData(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DisplindiviualData", userIdParameter);
        }
    
        public virtual ObjectResult<string> SP_Login(string userName, string password, ObjectParameter msg)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Login", userNameParameter, passwordParameter, msg);
        }
    
        public virtual ObjectResult<SP_PendingAction_Result> SP_PendingAction(Nullable<int> user)
        {
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PendingAction_Result>("SP_PendingAction", userParameter);
        }
    
        public virtual ObjectResult<string> SP_SaveAuditData(string page_name, string userName, string ipAddress, string timeStamp, Nullable<int> autherisation, ObjectParameter resultValue)
        {
            var page_nameParameter = page_name != null ?
                new ObjectParameter("page_name", page_name) :
                new ObjectParameter("page_name", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            var timeStampParameter = timeStamp != null ?
                new ObjectParameter("TimeStamp", timeStamp) :
                new ObjectParameter("TimeStamp", typeof(string));
    
            var autherisationParameter = autherisation.HasValue ?
                new ObjectParameter("Autherisation", autherisation) :
                new ObjectParameter("Autherisation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_SaveAuditData", page_nameParameter, userNameParameter, ipAddressParameter, timeStampParameter, autherisationParameter, resultValue);
        }
    
        public virtual ObjectResult<string> Tbl_BirthRegistration_SP(string name_of_Informant, string name_of_Child, string gender_of_Child, string name_of_Father, string name_of_Mother, Nullable<System.DateTime> date_of_Birth, string place_of_Birth, string address, string gram_Panchayat_Unit, Nullable<bool> nationality, string nextAction, string documentType, string fileName, string documentName, string passportNo, string fileContent, string userID, Nullable<System.DateTime> modifyDate, string status, Nullable<bool> isActive, Nullable<int> custid, string bnDType, Nullable<int> ageofDeceased, string nameofBnDPerson, Nullable<System.DateTime> date_of_Death, string placeofDeath, ObjectParameter msg)
        {
            var name_of_InformantParameter = name_of_Informant != null ?
                new ObjectParameter("Name_of_Informant", name_of_Informant) :
                new ObjectParameter("Name_of_Informant", typeof(string));
    
            var name_of_ChildParameter = name_of_Child != null ?
                new ObjectParameter("Name_of_Child", name_of_Child) :
                new ObjectParameter("Name_of_Child", typeof(string));
    
            var gender_of_ChildParameter = gender_of_Child != null ?
                new ObjectParameter("Gender_of_Child", gender_of_Child) :
                new ObjectParameter("Gender_of_Child", typeof(string));
    
            var name_of_FatherParameter = name_of_Father != null ?
                new ObjectParameter("Name_of_Father", name_of_Father) :
                new ObjectParameter("Name_of_Father", typeof(string));
    
            var name_of_MotherParameter = name_of_Mother != null ?
                new ObjectParameter("Name_of_Mother", name_of_Mother) :
                new ObjectParameter("Name_of_Mother", typeof(string));
    
            var date_of_BirthParameter = date_of_Birth.HasValue ?
                new ObjectParameter("Date_of_Birth", date_of_Birth) :
                new ObjectParameter("Date_of_Birth", typeof(System.DateTime));
    
            var place_of_BirthParameter = place_of_Birth != null ?
                new ObjectParameter("Place_of_Birth", place_of_Birth) :
                new ObjectParameter("Place_of_Birth", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var gram_Panchayat_UnitParameter = gram_Panchayat_Unit != null ?
                new ObjectParameter("Gram_Panchayat_Unit", gram_Panchayat_Unit) :
                new ObjectParameter("Gram_Panchayat_Unit", typeof(string));
    
            var nationalityParameter = nationality.HasValue ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(bool));
    
            var nextActionParameter = nextAction != null ?
                new ObjectParameter("NextAction", nextAction) :
                new ObjectParameter("NextAction", typeof(string));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("DocumentName", documentName) :
                new ObjectParameter("DocumentName", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var fileContentParameter = fileContent != null ?
                new ObjectParameter("FileContent", fileContent) :
                new ObjectParameter("FileContent", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var custidParameter = custid.HasValue ?
                new ObjectParameter("Custid", custid) :
                new ObjectParameter("Custid", typeof(int));
    
            var bnDTypeParameter = bnDType != null ?
                new ObjectParameter("BnDType", bnDType) :
                new ObjectParameter("BnDType", typeof(string));
    
            var ageofDeceasedParameter = ageofDeceased.HasValue ?
                new ObjectParameter("AgeofDeceased", ageofDeceased) :
                new ObjectParameter("AgeofDeceased", typeof(int));
    
            var nameofBnDPersonParameter = nameofBnDPerson != null ?
                new ObjectParameter("NameofBnDPerson", nameofBnDPerson) :
                new ObjectParameter("NameofBnDPerson", typeof(string));
    
            var date_of_DeathParameter = date_of_Death.HasValue ?
                new ObjectParameter("Date_of_Death", date_of_Death) :
                new ObjectParameter("Date_of_Death", typeof(System.DateTime));
    
            var placeofDeathParameter = placeofDeath != null ?
                new ObjectParameter("PlaceofDeath", placeofDeath) :
                new ObjectParameter("PlaceofDeath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Tbl_BirthRegistration_SP", name_of_InformantParameter, name_of_ChildParameter, gender_of_ChildParameter, name_of_FatherParameter, name_of_MotherParameter, date_of_BirthParameter, place_of_BirthParameter, addressParameter, gram_Panchayat_UnitParameter, nationalityParameter, nextActionParameter, documentTypeParameter, fileNameParameter, documentNameParameter, passportNoParameter, fileContentParameter, userIDParameter, modifyDateParameter, statusParameter, isActiveParameter, custidParameter, bnDTypeParameter, ageofDeceasedParameter, nameofBnDPersonParameter, date_of_DeathParameter, placeofDeathParameter, msg);
        }
    
        public virtual ObjectResult<string> Tbl_BirthRegistration_Update_SP(string b_ID, string name_of_Informant, string name_of_Child, string gender_of_Child, string name_of_Father, string name_of_Mother, Nullable<System.DateTime> date_of_Birth, string place_of_Birth, string address, string gram_Panchayat_Unit, Nullable<bool> nationality, string nextAction, string documentType, string fileName, string documentName, string passportNo, string fileContent, string userID, Nullable<System.DateTime> modifyDate, string status, Nullable<bool> isActive, Nullable<int> custid, string bnDType, Nullable<int> ageofDeceased, string nameofBnDPerson, Nullable<System.DateTime> date_of_Death, string placeofDeath, ObjectParameter msg)
        {
            var b_IDParameter = b_ID != null ?
                new ObjectParameter("B_ID", b_ID) :
                new ObjectParameter("B_ID", typeof(string));
    
            var name_of_InformantParameter = name_of_Informant != null ?
                new ObjectParameter("Name_of_Informant", name_of_Informant) :
                new ObjectParameter("Name_of_Informant", typeof(string));
    
            var name_of_ChildParameter = name_of_Child != null ?
                new ObjectParameter("Name_of_Child", name_of_Child) :
                new ObjectParameter("Name_of_Child", typeof(string));
    
            var gender_of_ChildParameter = gender_of_Child != null ?
                new ObjectParameter("Gender_of_Child", gender_of_Child) :
                new ObjectParameter("Gender_of_Child", typeof(string));
    
            var name_of_FatherParameter = name_of_Father != null ?
                new ObjectParameter("Name_of_Father", name_of_Father) :
                new ObjectParameter("Name_of_Father", typeof(string));
    
            var name_of_MotherParameter = name_of_Mother != null ?
                new ObjectParameter("Name_of_Mother", name_of_Mother) :
                new ObjectParameter("Name_of_Mother", typeof(string));
    
            var date_of_BirthParameter = date_of_Birth.HasValue ?
                new ObjectParameter("Date_of_Birth", date_of_Birth) :
                new ObjectParameter("Date_of_Birth", typeof(System.DateTime));
    
            var place_of_BirthParameter = place_of_Birth != null ?
                new ObjectParameter("Place_of_Birth", place_of_Birth) :
                new ObjectParameter("Place_of_Birth", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var gram_Panchayat_UnitParameter = gram_Panchayat_Unit != null ?
                new ObjectParameter("Gram_Panchayat_Unit", gram_Panchayat_Unit) :
                new ObjectParameter("Gram_Panchayat_Unit", typeof(string));
    
            var nationalityParameter = nationality.HasValue ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(bool));
    
            var nextActionParameter = nextAction != null ?
                new ObjectParameter("NextAction", nextAction) :
                new ObjectParameter("NextAction", typeof(string));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("DocumentName", documentName) :
                new ObjectParameter("DocumentName", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var fileContentParameter = fileContent != null ?
                new ObjectParameter("FileContent", fileContent) :
                new ObjectParameter("FileContent", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var custidParameter = custid.HasValue ?
                new ObjectParameter("Custid", custid) :
                new ObjectParameter("Custid", typeof(int));
    
            var bnDTypeParameter = bnDType != null ?
                new ObjectParameter("BnDType", bnDType) :
                new ObjectParameter("BnDType", typeof(string));
    
            var ageofDeceasedParameter = ageofDeceased.HasValue ?
                new ObjectParameter("AgeofDeceased", ageofDeceased) :
                new ObjectParameter("AgeofDeceased", typeof(int));
    
            var nameofBnDPersonParameter = nameofBnDPerson != null ?
                new ObjectParameter("NameofBnDPerson", nameofBnDPerson) :
                new ObjectParameter("NameofBnDPerson", typeof(string));
    
            var date_of_DeathParameter = date_of_Death.HasValue ?
                new ObjectParameter("Date_of_Death", date_of_Death) :
                new ObjectParameter("Date_of_Death", typeof(System.DateTime));
    
            var placeofDeathParameter = placeofDeath != null ?
                new ObjectParameter("PlaceofDeath", placeofDeath) :
                new ObjectParameter("PlaceofDeath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Tbl_BirthRegistration_Update_SP", b_IDParameter, name_of_InformantParameter, name_of_ChildParameter, gender_of_ChildParameter, name_of_FatherParameter, name_of_MotherParameter, date_of_BirthParameter, place_of_BirthParameter, addressParameter, gram_Panchayat_UnitParameter, nationalityParameter, nextActionParameter, documentTypeParameter, fileNameParameter, documentNameParameter, passportNoParameter, fileContentParameter, userIDParameter, modifyDateParameter, statusParameter, isActiveParameter, custidParameter, bnDTypeParameter, ageofDeceasedParameter, nameofBnDPersonParameter, date_of_DeathParameter, placeofDeathParameter, msg);
        }
    
        public virtual ObjectResult<string> Tbl_DeathRegistration_SP(string name_of_Informant, string name_of_Deceased_Person, string gender_Of_Deceased_Person, string name_of_Deceased_FatherHusband, Nullable<System.DateTime> date_Of_Death, string place_Of_Death, string age_Of_Deceased, string address, string gram_Panchayat_Unit, Nullable<bool> nationality, string documentType, string documentName, string documentBytes, string userID, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifyDate, ObjectParameter msg)
        {
            var name_of_InformantParameter = name_of_Informant != null ?
                new ObjectParameter("Name_of_Informant", name_of_Informant) :
                new ObjectParameter("Name_of_Informant", typeof(string));
    
            var name_of_Deceased_PersonParameter = name_of_Deceased_Person != null ?
                new ObjectParameter("Name_of_Deceased_Person", name_of_Deceased_Person) :
                new ObjectParameter("Name_of_Deceased_Person", typeof(string));
    
            var gender_Of_Deceased_PersonParameter = gender_Of_Deceased_Person != null ?
                new ObjectParameter("Gender_Of_Deceased_Person", gender_Of_Deceased_Person) :
                new ObjectParameter("Gender_Of_Deceased_Person", typeof(string));
    
            var name_of_Deceased_FatherHusbandParameter = name_of_Deceased_FatherHusband != null ?
                new ObjectParameter("Name_of_Deceased_FatherHusband", name_of_Deceased_FatherHusband) :
                new ObjectParameter("Name_of_Deceased_FatherHusband", typeof(string));
    
            var date_Of_DeathParameter = date_Of_Death.HasValue ?
                new ObjectParameter("Date_Of_Death", date_Of_Death) :
                new ObjectParameter("Date_Of_Death", typeof(System.DateTime));
    
            var place_Of_DeathParameter = place_Of_Death != null ?
                new ObjectParameter("Place_Of_Death", place_Of_Death) :
                new ObjectParameter("Place_Of_Death", typeof(string));
    
            var age_Of_DeceasedParameter = age_Of_Deceased != null ?
                new ObjectParameter("Age_Of_Deceased", age_Of_Deceased) :
                new ObjectParameter("Age_Of_Deceased", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var gram_Panchayat_UnitParameter = gram_Panchayat_Unit != null ?
                new ObjectParameter("Gram_Panchayat_Unit", gram_Panchayat_Unit) :
                new ObjectParameter("Gram_Panchayat_Unit", typeof(string));
    
            var nationalityParameter = nationality.HasValue ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(bool));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(string));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("DocumentName", documentName) :
                new ObjectParameter("DocumentName", typeof(string));
    
            var documentBytesParameter = documentBytes != null ?
                new ObjectParameter("DocumentBytes", documentBytes) :
                new ObjectParameter("DocumentBytes", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Tbl_DeathRegistration_SP", name_of_InformantParameter, name_of_Deceased_PersonParameter, gender_Of_Deceased_PersonParameter, name_of_Deceased_FatherHusbandParameter, date_Of_DeathParameter, place_Of_DeathParameter, age_Of_DeceasedParameter, addressParameter, gram_Panchayat_UnitParameter, nationalityParameter, documentTypeParameter, documentNameParameter, documentBytesParameter, userIDParameter, createdOnParameter, modifyDateParameter, msg);
        }
    
        public virtual ObjectResult<Tbl_GetBirthRegistration_SP_Result> Tbl_GetBirthRegistration_SP(string nextAction, string bnDType)
        {
            var nextActionParameter = nextAction != null ?
                new ObjectParameter("nextAction", nextAction) :
                new ObjectParameter("nextAction", typeof(string));
    
            var bnDTypeParameter = bnDType != null ?
                new ObjectParameter("BnDType", bnDType) :
                new ObjectParameter("BnDType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_GetBirthRegistration_SP_Result>("Tbl_GetBirthRegistration_SP", nextActionParameter, bnDTypeParameter);
        }
    
        public virtual ObjectResult<SP_GetDetailofSingleUser_Result> SP_GetDetailofSingleUser(Nullable<int> bR_ID)
        {
            var bR_IDParameter = bR_ID.HasValue ?
                new ObjectParameter("BR_ID", bR_ID) :
                new ObjectParameter("BR_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDetailofSingleUser_Result>("SP_GetDetailofSingleUser", bR_IDParameter);
        }
    
        public virtual int SP_InsertNextActionData(Nullable<int> bR_ID, string comment, string action, string username, Nullable<int> u_ID, ObjectParameter msg)
        {
            var bR_IDParameter = bR_ID.HasValue ?
                new ObjectParameter("BR_ID", bR_ID) :
                new ObjectParameter("BR_ID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var u_IDParameter = u_ID.HasValue ?
                new ObjectParameter("U_ID", u_ID) :
                new ObjectParameter("U_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertNextActionData", bR_IDParameter, commentParameter, actionParameter, usernameParameter, u_IDParameter, msg);
        }
    
        public virtual ObjectResult<SP_PendingAction_Selection_Result> SP_PendingAction_Selection(string actionID)
        {
            var actionIDParameter = actionID != null ?
                new ObjectParameter("ActionID", actionID) :
                new ObjectParameter("ActionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PendingAction_Selection_Result>("SP_PendingAction_Selection", actionIDParameter);
        }
    
        public virtual ObjectResult<SP_Clarification_Master_Result> SP_Clarification_Master()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Clarification_Master_Result>("SP_Clarification_Master");
        }
    
        public virtual ObjectResult<string> SP_InsertRejectionRecomend(Nullable<int> bR_ID, string username, string comments, ObjectParameter msg)
        {
            var bR_IDParameter = bR_ID.HasValue ?
                new ObjectParameter("BR_ID", bR_ID) :
                new ObjectParameter("BR_ID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_InsertRejectionRecomend", bR_IDParameter, usernameParameter, commentsParameter, msg);
        }
    
        public virtual ObjectResult<string> SP_InsertNextActionData_1(Nullable<int> bR_ID, string comment, string action, string actionSection, string username, Nullable<int> uID, ObjectParameter msg)
        {
            var bR_IDParameter = bR_ID.HasValue ?
                new ObjectParameter("BR_ID", bR_ID) :
                new ObjectParameter("BR_ID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var actionSectionParameter = actionSection != null ?
                new ObjectParameter("ActionSection", actionSection) :
                new ObjectParameter("ActionSection", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_InsertNextActionData_1", bR_IDParameter, commentParameter, actionParameter, actionSectionParameter, usernameParameter, uIDParameter, msg);
        }
    
        public virtual ObjectResult<string> SP_Pending_verification_User(Nullable<int> iD, ObjectParameter msg)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Pending_verification_User", iDParameter, msg);
        }
    
        public virtual ObjectResult<sp_Look_Result> sp_Look(string actionID, string cust_Id)
        {
            var actionIDParameter = actionID != null ?
                new ObjectParameter("ActionID", actionID) :
                new ObjectParameter("ActionID", typeof(string));
    
            var cust_IdParameter = cust_Id != null ?
                new ObjectParameter("Cust_Id", cust_Id) :
                new ObjectParameter("Cust_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Look_Result>("sp_Look", actionIDParameter, cust_IdParameter);
        }
    
        public virtual ObjectResult<SP_Customer_Details_Result> SP_Customer_Details(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Customer_Details_Result>("SP_Customer_Details", iDParameter);
        }
    
        public virtual int SP_InsertDocumentList(string bR_ID, string docname, string doctype, string docFilePath, Nullable<int> isActive, ObjectParameter msg)
        {
            var bR_IDParameter = bR_ID != null ?
                new ObjectParameter("BR_ID", bR_ID) :
                new ObjectParameter("BR_ID", typeof(string));
    
            var docnameParameter = docname != null ?
                new ObjectParameter("Docname", docname) :
                new ObjectParameter("Docname", typeof(string));
    
            var doctypeParameter = doctype != null ?
                new ObjectParameter("Doctype", doctype) :
                new ObjectParameter("Doctype", typeof(string));
    
            var docFilePathParameter = docFilePath != null ?
                new ObjectParameter("DocFilePath", docFilePath) :
                new ObjectParameter("DocFilePath", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertDocumentList", bR_IDParameter, docnameParameter, doctypeParameter, docFilePathParameter, isActiveParameter, msg);
        }
    
        public virtual ObjectResult<string> SP_InsertNextActionData_v1(Nullable<int> bR_ID, string comment, string action, string actionSection, string username, Nullable<int> uID, ObjectParameter msg)
        {
            var bR_IDParameter = bR_ID.HasValue ?
                new ObjectParameter("BR_ID", bR_ID) :
                new ObjectParameter("BR_ID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var actionSectionParameter = actionSection != null ?
                new ObjectParameter("ActionSection", actionSection) :
                new ObjectParameter("ActionSection", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_InsertNextActionData_v1", bR_IDParameter, commentParameter, actionParameter, actionSectionParameter, usernameParameter, uIDParameter, msg);
        }
    
        public virtual ObjectResult<SP_Mail_Content_Result> SP_Mail_Content(string actionN)
        {
            var actionNParameter = actionN != null ?
                new ObjectParameter("ActionN", actionN) :
                new ObjectParameter("ActionN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Mail_Content_Result>("SP_Mail_Content", actionNParameter);
        }
    
        public virtual ObjectResult<SP_ViewBndDocuments_1_Result> SP_ViewBndDocuments_1(string bR_ID)
        {
            var bR_IDParameter = bR_ID != null ?
                new ObjectParameter("BR_ID", bR_ID) :
                new ObjectParameter("BR_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ViewBndDocuments_1_Result>("SP_ViewBndDocuments_1", bR_IDParameter);
        }
    
        public virtual int SP_UpdateDocumentList_1(string bR_ID, string docname, string doctype, string docFilePath, Nullable<bool> isActive, Nullable<int> custid, ObjectParameter msg)
        {
            var bR_IDParameter = bR_ID != null ?
                new ObjectParameter("BR_ID", bR_ID) :
                new ObjectParameter("BR_ID", typeof(string));
    
            var docnameParameter = docname != null ?
                new ObjectParameter("Docname", docname) :
                new ObjectParameter("Docname", typeof(string));
    
            var doctypeParameter = doctype != null ?
                new ObjectParameter("Doctype", doctype) :
                new ObjectParameter("Doctype", typeof(string));
    
            var docFilePathParameter = docFilePath != null ?
                new ObjectParameter("DocFilePath", docFilePath) :
                new ObjectParameter("DocFilePath", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var custidParameter = custid.HasValue ?
                new ObjectParameter("Custid", custid) :
                new ObjectParameter("Custid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateDocumentList_1", bR_IDParameter, docnameParameter, doctypeParameter, docFilePathParameter, isActiveParameter, custidParameter, msg);
        }
    }
}
